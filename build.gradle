plugins {
    id 'fabric-loom' version '1.7.4'
    id 'babric-loom-extension' version '1.7.4'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group
def modId = project.mod_id

base {
    archivesName = project.archives_base_name
}

loom {
    accessWidenerPath = file("src/main/resources/${modId}.accesswidener")
}

babric {
    disableM1Fixes.set(true) // Disable gambac (M1 colours fix.)
}

repositories {
    // Used for the fabric toolchain in this project.
    maven {
        name = 'Babric'
        url = 'https://maven.glass-launcher.net/babric'
    }
    // Used for mappings.
    maven {
        name = 'Nostalgia'
        url = 'https://maven.wispforest.io'
    }
    // Used for projects that do not have a maven repository, but do have a GitHub repository with working build scripts.
    maven {
        name = 'Jitpack'
        url = 'https://jitpack.io/'
    }
    maven {
        name = 'HalfOf2'
        url = 'https://storage.googleapis.com/devan-maven/'
    }
    maven {
        name = 'LWJGL3'
        url = 'https://oss.sonatype.org/content/repositories/releases/'
    }
    mavenLocal()
}

import org.gradle.internal.os.OperatingSystem

project.ext.lwjglVersion = "3.3.3"
switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        project.ext.lwjglNatives = "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = "natives-macos"
        break
    case OperatingSystem.WINDOWS:
        def osArch = System.getProperty("os.arch")
        project.ext.lwjglNatives = osArch.contains("64")
                ? "natives-windows${osArch.startsWith("aarch64") ? "-arm64" : ""}"
                : "natives-windows-x86"
        break
}

dependencies {
    // Adds LWJGL3 wrapper
    implementation("com.github.Adventurecraft-Awakening:AC-LWJGL3-Injector:0.0.4")

    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    implementation "org.lwjgl:lwjgl-glfw:$lwjglVersion"

    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"

    // Compiles rhino, our javascript dependency, releases can be found here: https://github.com/mozilla/rhino/releases
    // There are more archived versions on this website: https://www-archive.mozilla.org/rhino/rhino16r2
    implementation 'org.mozilla:rhino:1.7.15'

    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "me.alphamode:nostalgia:${project.nostalgia_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    implementation "org.slf4j:slf4j-api:1.8.0-beta4"
    implementation "org.apache.logging.log4j:log4j-slf4j18-impl:2.16.0"

    include(implementation('com.github.Chocohead:Fabric-ASM:v2.3'))

    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    implementation('it.unimi.dsi:fastutil-core:8.5.12')

    implementation('com.mojang:brigadier:1.2.9')
}

configurations.configureEach {
    // Removes LWJGL2 dependencies
    exclude group: "org.lwjgl.lwjgl"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
